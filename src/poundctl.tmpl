{{- /* Default template for poundctl */ -}}
{{- /* Copyright (C) 2023 Sergey Poznyakoff
     *
     * Pound is free software; you can redistribute it and/or modify
     * it under the terms of the GNU General Public License as published by
     * the Free Software Foundation; either version 3 of the License, or
     * (at your option) any later version.
     *
     * Pound is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU General Public License for more details.
     *
     * You should have received a copy of the GNU General Public License
     * along with pound.  If not, see <http://www.gnu.org/licenses/>.
     */ -}}
{{define "default" -}}

{{- /* The code below deduces the type of object passed to it by
       presence of certain attributes:

         "listeners"  -  entire listing as requested by poundctl list
	 "services"   -  single listener as requested by poundctl list /L
	                 Notice that this attribute is present in the full
			 listing as well, so presense of "listeners" should
			 be checked first.
	 "backends"   -  single service as requested by poundctl list /L/S

       otherwise, a backend listing (poundctl list /L/S/B) is assumed. */ -}}

{{if exists . "listeners" -}}
{{- /* Iterate over all listeners */ -}}
{{range $lno,$lstn = .listeners -}}
{{printf "%3d" $lno}}. {{block "print_listener" $lstn -}}
 Listener {{.protocol}}://{{.address}} {{if .active}}active{{else}}disabled{{end}}
 {{- /* For each listener, show all its services */ -}}
 {{block "print_services" .services}}
 {{- range $sno,$svc = .}}
   {{printf "%3d" $sno}}. {{block "print_service" $svc -}}
   Service "{{.name}}" {{if .enabled}}active{{else}}disabled{{end}} ({{.tot_pri}})
  {{- /* List each backend in service */ -}}
  {{- range $bno,$backend = .backends}}
      {{printf "%3d" $bno}}. {{block "print_backend" $backend -}}
       {{.type}} {{if eq .type "backend" -}}
{{.protocol}} {{.address}} {{.priority}} {{if .alive}}alive{{else}}dead{{end}}
     {{- else if eq .type "redirect" -}}
{{.code}} {{.url}}{{if .redir_req}} (redirect request){{end}}
     {{- end}} {{if .enabled}}active{{else}}disabled{{end}}
   {{- end}}{{ /* block print_backend */ }}
  {{- end}}{{ /* iterating over backends */ }}
  {{- /* Show session type supported by the service */ }}
     Session type: {{.session_type}}
       {{- if len .sessions}}
         {{- /* List all sessions */ }}
         {{- range $i, $sess = .sessions}}
       {{$i}}. Session {{$sess.key}} {{$sess.backend}} {{$sess.expire}}
         {{- end}}{{ /* ranging over sessions */ -}}
       {{end}}{{ /* if len */ }}
 {{- end}}{{ /* block print_service */ }}
 {{- end}}{{ /* iterating over services */ }}
 {{- end}}{{ /* block print_services */ }}
 {{- end}}{{ /* block print_listener */ }}
{{end}}{{ /* iterating over listeners */ }}
{{- if len .services}}
Global services:
{{block "print_services" .services}}
{{end -}}{{ /* if len .services */ }}
{{else if exists . "services" -}}
{{block "print_listener" .}}
{{else if exists . "backends" -}}
{{block "print_service" .}}
{{else -}}
{{block "print_backend" .}}
{{end -}}
{{end -}}{{ /* define */ }}
